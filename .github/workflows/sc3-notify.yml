name: 检测A股涨跌家数并推送通知

on:
  schedule:
    # 北京时间 09:15–15:00 => UTC 01:15–07:00，每5分钟检测一次
    - cron: "*/5 1-7 * * 1-5"
  workflow_dispatch:  # 允许手动运行

jobs:
  check_a_shares:
    runs-on: ubuntu-latest

    steps:
      - name: 安装依赖
        run: sudo apt-get install -y jq

      - name: 检测A股涨跌家数
        id: fetch
        run: |
          API_URL="https://push2.eastmoney.com/api/qt/ulist.np/get?fields=f104,f105,f106,f107,f113&fltt=2&secids=1.000001"
          DATA=$(curl -s "$API_URL" | jq '.data.diff[0]')
          UP=$(echo "$DATA" | jq -r '.f104')
          DOWN=$(echo "$DATA" | jq -r '.f105')
          TOTAL=$((UP + DOWN))
          API_DATE=$(curl -s "https://push2.eastmoney.com/api/qt/stock/get?secid=1.000001" | jq -r '.data.f57')
          NOW_DATE=$(date +%Y%m%d)

          echo "UP=$UP" >> $GITHUB_ENV
          echo "DOWN=$DOWN" >> $GITHUB_ENV
          echo "TOTAL=$TOTAL" >> $GITHUB_ENV
          echo "API_DATE=$API_DATE" >> $GITHUB_ENV
          echo "NOW_DATE=$NOW_DATE" >> $GITHUB_ENV

      - name: 检查上次数据并决定是否推送
        id: check
        run: |
          STATE_FILE="/tmp/last_push.json"
          IS_MANUAL="${{ github.event_name == 'workflow_dispatch' }}"
          
          echo "当前运行模式: $IS_MANUAL"

          # 如果API日期和本地日期不同（休市），则退出（除非手动运行）
          if [ "$API_DATE" != "$NOW_DATE" ] && [ "$IS_MANUAL" != "true" ]; then
            echo "⚪ 非交易日，跳过推送"
            echo "should_push=false" >> $GITHUB_ENV
            exit 0
          fi

          # 如果是新的一天，重置状态文件
          if [ -f "$STATE_FILE" ]; then
            LAST_DATE=$(jq -r '.date' "$STATE_FILE")
            if [ "$LAST_DATE" != "$NOW_DATE" ]; then
              echo "{}" > "$STATE_FILE"
            fi
          fi

          # 如果没有历史记录，则直接推送
          if [ ! -f "$STATE_FILE" ] || [ "$(jq -r '.up' "$STATE_FILE" 2>/dev/null)" == "null" ]; then
            echo "{\"up\":$UP,\"down\":$DOWN,\"date\":\"$NOW_DATE\"}" > "$STATE_FILE"
            echo "should_push=true" >> $GITHUB_ENV
            exit 0
          fi

          LAST_UP=$(jq -r '.up' "$STATE_FILE")
          LAST_DOWN=$(jq -r '.down' "$STATE_FILE")

          DIFF_UP=$((UP - LAST_UP))
          DIFF_DOWN=$((DOWN - LAST_DOWN))
          ABS_UP=${DIFF_UP#-}
          ABS_DOWN=${DIFF_DOWN#-}

          echo "上次上涨家数：$LAST_UP"
          echo "上次下跌家数：$LAST_DOWN"
          echo "变化：上涨=$DIFF_UP 下跌=$DIFF_DOWN"

          # 如果两个变化都 ≤ 500 且不是手动运行，则不推送
          if [ "$ABS_UP" -le 500 ] && [ "$ABS_DOWN" -le 500 ] && [ "$IS_MANUAL" != "true" ]; then
            echo "变化不足500，跳过推送"
            echo "should_push=false" >> $GITHUB_ENV
            exit 0
          fi

          # 记录新状态
          echo "{\"up\":$UP,\"down\":$DOWN,\"date\":\"$NOW_DATE\"}" > "$STATE_FILE"
          echo "should_push=true" >> $GITHUB_ENV

      - name: 推送到Server酱
        if: env.should_push == 'true'
        run: |
          KEY="${{ secrets.SERVER_KEY }}"
          TITLE="A股涨跌家数"
          PERCENT_UP=$(awk "BEGIN {printf \"%.2f\", $UP/$TOTAL*100}")
          PERCENT_DOWN=$(awk "BEGIN {printf \"%.2f\", $DOWN/$TOTAL*100}")
          DESP="📈 上涨家数：${UP} (${PERCENT_UP}%)\n📉 下跌家数：${DOWN} (${PERCENT_DOWN}%)\n📊 总家数：${TOTAL}\n📅 日期：${NOW_DATE}"

          curl -s "https://sc3.ft07.com/send/$KEY.send?title=${TITLE}&desp=${DESP}"
