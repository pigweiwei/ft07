name: 检测A股涨跌家数并推送通知

on:
  schedule:
    # 北京时间 09:15–15:00 => UTC 01:15–07:00，每15分钟执行一次
    - cron: "*/15 1-7 * * 1-5"
  workflow_dispatch:  # 支持手动运行

jobs:
  check_a_shares:
    runs-on: ubuntu-latest

    steps:
      - name: 检测A股涨跌家数并推送
        env:
          SCKEY: ${{ secrets.SERVERCHAN_KEY }}  # Server酱³密钥
        run: |
          python3 - <<'EOF'
          import requests, datetime, sys

          # ========== 基础配置 ==========
          SERVER_KEY = "${{ secrets.SERVERCHAN_KEY }}"
          PUSH_URL = f"https://sctapi.ftqq.com/{SERVER_KEY}.send"
          EASTMONEY_URL = "https://push2.eastmoney.com/api/qt/ulist.np/get"
          CALENDAR_URL = "https://api.toolhub.cn/api/holiday/info"  # 免费节假日接口

          # ========== 工具函数 ==========
          def is_trading_day():
              """检测今天是否为交易日"""
              today = datetime.date.today().strftime("%Y-%m-%d")
              try:
                  r = requests.get(CALENDAR_URL, params={"date": today}, timeout=5)
                  data = r.json()
                  if data.get("code") == 200:
                      if data["data"]["workday"]:
                          return True
                      else:
                          print("📅 今天是假期或周末，跳过推送。")
                          return False
              except Exception as e:
                  print(f"⚠️ 节假日接口异常：{e}，默认视为交易日。")
                  return True
              return True

          def push_serverchan(title, desp):
              """推送到 Server酱³"""
              try:
                  r = requests.post(PUSH_URL, data={"title": title, "desp": desp})
                  if r.status_code == 200:
                      print("✅ 推送成功")
                  else:
                      print(f"❌ 推送失败：{r.text}")
              except Exception as e:
                  print(f"❌ 推送异常：{e}")

          # ========== 主逻辑 ==========
          now = datetime.datetime.now()
          hour = now.hour

          # 非交易时间自动退出（手动运行除外）
          manual = "workflow_dispatch" in sys.argv
          if not manual and (hour < 9 or hour >= 15):
              print("⏸ 当前非交易时段，不推送。")
              sys.exit(0)

          if not manual and not is_trading_day():
              sys.exit(0)

          print("📡 获取东方财富数据中...")

          params = {
              "fltt": "2",
              "secids": "1.000001,0.399001",
              "fields": "f104,f105"
          }

          try:
              r = requests.get(EASTMONEY_URL, params=params, timeout=10)
              data = r.json()
              diff = data["data"]["diff"]
          except Exception as e:
              print(f"❌ 获取东方财富数据失败：{e}")
              sys.exit(1)

          try:
              up_total = diff[0]["f104"]
              down_total = diff[0]["f105"]
              total = up_total + down_total
              up_ratio = round(up_total / total * 100, 1)
              down_ratio = round(down_total / total * 100, 1)
          except Exception as e:
              print(f"❌ 数据解析错误：{e}")
              sys.exit(1)

          # ========== 构造推送内容 ==========
          date_str = now.strftime("%Y-%m-%d %H:%M")
          title = f"A股涨跌家数（{date_str}）"
          desp = (
              f"📈 上涨家数：{up_total}（{up_ratio}%）\n"
              f"📉 下跌家数：{down_total}（{down_ratio}%）\n"
              f"📊 总家数：{total}"
          )

          print("📬 推送内容如下：\n" + desp)
          push_serverchan(title, desp)
          EOF
